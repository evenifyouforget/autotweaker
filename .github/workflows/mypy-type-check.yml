# This workflow checks Python typing issues using Mypy.
# It runs automatically on every push to the main branch and for every pull request,
# providing inline annotations for type errors directly in the pull request view.

name: Mypy Type Check

on:
  push:
    # Triggers the workflow when code is pushed to the 'main' branch
    branches: [ "main" ]
  pull_request:
    # Triggers the workflow when a pull request is opened or updated targeting 'main'
    branches: [ "main" ]

jobs:
  # Define a job named 'run-mypy'
  run-mypy:
    # Specifies that the job should run on the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Steps define the sequence of tasks executed in this job
    steps:
      # Step 1: Checkout the repository code
      # This action allows your workflow to access the code in your repository.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up a Python environment
      # This action installs Python 3.9 for the build environment.
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Step 3: Install project dependencies
      # This step upgrades pip and installs dependencies from requirements.txt if present.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # Step 4: Run Mypy using a dedicated GitHub Action
      # This action handles Mypy execution and creates inline annotations on your PR.
      # The 'mypy_flags' input is used to pass your desired loosening flags.
      - name: Run Mypy with Annotations (Looser Check)
        uses: sasanquaneuf/mypy-github-action@v3 # Updated to v3 to resolve "unable to find version" error
        with:
          # Pass the flags for looser checking, suitable for partially typed codebases.
          # These flags will ignore missing imports, allow untyped function definitions,
          # and relax strict None checks.
          mypy_flags: "--ignore-missing-imports --allow-untyped-defs --no-strict-optional"
          # Optionally, you can specify a Mypy version for stability
          # mypy_version: '1.8.0'
          # If you have a mypy.ini or pyproject.toml for configuration:
          # mypy_config_file: 'mypy.ini'
